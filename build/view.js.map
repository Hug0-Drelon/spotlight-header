{"version":3,"file":"view.js","mappings":";;;;AAAAA,MAAM,CAACC,gBAAgB,CAAE,kBAAkB,EAAE,MAAM;EAC/C,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAE,uBAAwB,CAAC;EACnE,MAAMC,SAAS,GAAGF,QAAQ,CAACC,aAAa,CAAE,+BAAgC,CAAC;EAE3E,IAAK,CAAEF,SAAS,IAAI,CAAEG,SAAS,EAAG;IAC9B;EACJ;EAEA,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAIC,cAAc;EAClB,IAAIC,SAAS,GAAG,IAAI;EACpB,IAAIC,cAAc,GAAG,KAAK;EAE1BZ,MAAM,CAACC,gBAAgB,CAAE,QAAQ,EAAE,MAAM;IACrC,IAAKW,cAAc,EAAG;MAClB;IACJ;;IAEA;IACA;IACA;IACA;;IAEA,MAAMC,cAAc,GAAGb,MAAM,CAACc,OAAO;IACrC,MAAMC,SAAS,GAAG,GAAG;IAErBJ,SAAS,GAAG,KAAK;IACjBC,cAAc,GAAG,IAAI;IACrBV,SAAS,CAACc,SAAS,CAACC,GAAG,CAAE,WAAY,CAAC;IACtCZ,SAAS,CAACW,SAAS,CAACC,GAAG,CAAE,SAAU,CAAC;IAEpC,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,GAAG,CAAEP,cAAc,GAAGE,SAAS,EAAE,CAAE,CAAC;IAClEN,OAAO,GAAG,GAAG,GAAGS,gBAAgB,CAAC,CAAC;IAClCV,OAAO,GAAG,EAAE,CAAC,CAAC;;IAEd,IAAK,CAAEE,cAAc,EAAG;MACpBA,cAAc,GAAGW,qBAAqB,CAAEC,eAAgB,CAAC;IAC7D;EACJ,CAAE,CAAC;EAEH,MAAMC,IAAI,GAAGA,CAAEC,KAAK,EAAEC,GAAG,EAAEC,MAAM,KAAM;IACnC,OAAOF,KAAK,GAAG,CAAEC,GAAG,GAAGD,KAAK,IAAKE,MAAM;EAC3C,CAAC;EAED,MAAMJ,eAAe,GAAGA,CAAA,KAAM;IAC1B,IAAK,CAACX,SAAS,EAAG;MACdgB,oBAAoB,CAAEjB,cAAe,CAAC;MACtCA,cAAc,GAAG,IAAI;MACrB;IACJ;IAEAJ,QAAQ,GAAGiB,IAAI,CAAEjB,QAAQ,EAAEE,OAAO,EAAE,GAAI,CAAC;IACzCD,QAAQ,GAAGgB,IAAI,CAAEhB,QAAQ,EAAEE,OAAO,EAAE,GAAI,CAAC;IAEzCP,SAAS,CAAC0B,KAAK,CAACC,eAAe,GAAG,6BAA6BvB,QAAQ,KAAKC,QAAQ,uDAAuD;IAE3IG,cAAc,GAAGW,qBAAqB,CAAEC,eAAgB,CAAC;EAC7D,CAAC;EAEDjB,SAAS,CAACJ,gBAAgB,CAAE,WAAW,EAAE6B,CAAC,IAAI;IAC1C,MAAMC,IAAI,GAAG1B,SAAS,CAAC2B,qBAAqB,CAAC,CAAC;IAC9CxB,OAAO,GAAK,CAAEsB,CAAC,CAACG,OAAO,GAAGF,IAAI,CAACG,IAAI,IAAKH,IAAI,CAACI,KAAK,GAAK,GAAG;IAC1D1B,OAAO,GAAK,CAAEqB,CAAC,CAACM,OAAO,GAAGL,IAAI,CAACM,GAAG,IAAKN,IAAI,CAACO,MAAM,GAAK,GAAG;IAE1D,IAAK,CAAE5B,cAAc,EAAG;MACpBA,cAAc,GAAGW,qBAAqB,CAAEC,eAAgB,CAAC;IAC7D;EACJ,CAAE,CAAC;EAEHjB,SAAS,CAACJ,gBAAgB,CAAE,YAAY,EAAE,MAAM;IAC5C0B,oBAAoB,CAAEjB,cAAe,CAAC;IACtCA,cAAc,GAAG,IAAI;EACzB,CAAE,CAAC;AACP,CAAE,CAAC,C","sources":["webpack://spotlight-header/./src/view.js"],"sourcesContent":["window.addEventListener( \"DOMContentLoaded\", () => {\n    const spotlight = document.querySelector( '.hd-spotlight-pointer' );\n    const container = document.querySelector( '.wp-block-hd-spotlight-header' );\n\n    if ( ! spotlight || ! container ) {\n        return;\n    }\n\n    let currentX = 50;\n    let currentY = 50;\n    let targetX = 50;\n    let targetY = 50;\n    let animationFrame;\n    let isVisible = true;\n    let hasDisappeared = false;\n\n    window.addEventListener( 'scroll', () => {\n        if ( hasDisappeared ) {\n            return;\n        }\n\n        // Check if mobile/tablet using window width\n        // if ( window.innerWidth <= 1024 ) {\n        //     return;\n        // }\n\n        const scrollPosition = window.scrollY;\n        const threshold = 100;\n\n        isVisible = false;\n        hasDisappeared = true;\n        spotlight.classList.add( 'is-hidden' );\n        container.classList.add( 'is-full' );\n\n        const scrollPercentage = Math.min( scrollPosition / threshold, 1 );\n        targetY = 100 * scrollPercentage; // Pull towards bottom\n        targetX = 50; // Center horizontally\n\n        if ( ! animationFrame ) {\n            animationFrame = requestAnimationFrame( updateSpotlight );\n        }\n    } );\n\n    const lerp = ( start, end, factor ) => {\n        return start + ( end - start ) * factor;\n    };\n\n    const updateSpotlight = () => {\n        if ( !isVisible ) {\n            cancelAnimationFrame( animationFrame );\n            animationFrame = null;\n            return;\n        }\n\n        currentX = lerp( currentX, targetX, 0.1 );\n        currentY = lerp( currentY, targetY, 0.1 );\n\n        spotlight.style.backgroundImage = `radial-gradient(circle at ${currentX}% ${currentY}%, transparent 130px, rgb(255, 255, 255) 130px 130px)`;\n\n        animationFrame = requestAnimationFrame( updateSpotlight );\n    };\n\n    container.addEventListener( 'mousemove', e => {\n        const rect = container.getBoundingClientRect();\n        targetX = ( ( e.clientX - rect.left ) / rect.width ) * 100;\n        targetY = ( ( e.clientY - rect.top ) / rect.height ) * 100;\n\n        if ( ! animationFrame ) {\n            animationFrame = requestAnimationFrame( updateSpotlight );\n        }\n    } );\n\n    container.addEventListener( 'mouseleave', () => {\n        cancelAnimationFrame( animationFrame );\n        animationFrame = null;\n    } );\n} );\n"],"names":["window","addEventListener","spotlight","document","querySelector","container","currentX","currentY","targetX","targetY","animationFrame","isVisible","hasDisappeared","scrollPosition","scrollY","threshold","classList","add","scrollPercentage","Math","min","requestAnimationFrame","updateSpotlight","lerp","start","end","factor","cancelAnimationFrame","style","backgroundImage","e","rect","getBoundingClientRect","clientX","left","width","clientY","top","height"],"sourceRoot":""}